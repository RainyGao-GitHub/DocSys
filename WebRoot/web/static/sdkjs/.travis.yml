services:
  - docker
language: node_js
node_js:
  - '12'
jobs:
  include:
    - stage: Check all source files with correct rules
      script:
        - rake check_source_files
    - stage: SonarQube Scanner
      if: branch = develop
      script:
        - wget -P /tmp https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.0.0.1744-linux.zip
        - unzip -d /tmp /tmp/sonar-scanner-cli-4.0.0.1744-linux.zip
        - /tmp/sonar-scanner-4.0.0.1744-linux/bin/sonar-scanner -Dsonar.login=$SONAR_TOKEN
    - stage: Formulas tests
      script:
        - npm install -g grunt-cli node-qunit-phantomjs
        - npm install --prefix build
        - grunt --gruntfile build/Gruntfile.js develop
        - node-qunit-phantomjs cell/.unit-tests/FormulaTests.html
    - stage: Building SDK and test it by `onlyofficetestingrobot/doc-builder-testing`
      script:
        - npm install -g grunt-cli
        - npm install --prefix build
        - grunt --level=WHITESPACE_ONLY --base build --gruntfile build/Gruntfile.js
        - docker pull onlyofficetestingrobot/doc-builder-testing:develop-latest
        - travis_wait 30 docker run -v $PWD/deploy/sdkjs/common:/opt/onlyoffice/documentbuilder/sdkjs/common
                                    -v $PWD/deploy/sdkjs/word:/opt/onlyoffice/documentbuilder/sdkjs/word
                                    -v $PWD/deploy/sdkjs/cell:/opt/onlyoffice/documentbuilder/sdkjs/cell
                                    -v $PWD/deploy/sdkjs/slide:/opt/onlyoffice/documentbuilder/sdkjs/slide
                                    onlyofficetestingrobot/doc-builder-testing:develop-latest
  allow_failures:
    - stage: SonarQube Scanner                                    
notifications:
  email:
    recipients:
      - shockwavenn@gmail.com
    on_success: never
    on_failure: always
env:
  global:
    secure: iqrqqfJLJkd9KRzYxP/Zt6KQqcMhnLavYhuYmkWdZS2+HLda4x40eI9v+ub0InetPnu2avfQl3K04FGhCEhDar+olmK1rZdSuEAwSWyAP8B8acCOPobgbwnHtlKyqLYuqUXf91M9kTdz0iBcKzpE1GaI8Nq+xzAc4xqnbT0yBrRfP0J9wF4dZ3PT+6wsK1qAIV/+1ZVtQQr39v+JUkcI5JHbuhewV3rIUUnw2AQ+56HUf9HMYONdaMuSP7kqgjL8MncQ2b29s6BTb2tOmun+AKmLlaZaFGSrpjOqKLsxMHUnsCR3uaRGD9xRC2SU5Qtf2chWgaX/eZipFtN9G68lxeoO3jPYkAKjeuS3JBqaZlaCooBKjuyrjdLRr+jZ9Aj3hWptiZzZJEDviAKUqJyZpM/7PSxew8dB+te277IIFhr63ElWcDsS7lAUtUBClYTfTQLZ3BrFHTsI3KEkUcBxs8b4DzSTU3bzluFePlP+XIalNz8PHmZfgW3NECnND9pZyiFETDWEvGSOEiYQ/5CMQbzXrpWMhEtb1Ze6ya23JqDHp6jcsRVp7AoJI0IRWpdexjo+Vy/iizUH670nbAam151zaGPhUtaetuCMX1gBhBqngnR5zVaggqKrXfDR2AmrLVMzuPLEBmKtKKRE7fUhYnGo6d3wUUapTN2G0ariKp0=
